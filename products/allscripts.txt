from django.shortcuts import render, get_object_or_404, redirect
from .models import Product
from .forms import ProductForm
from django.contrib.auth.forms import UserCreationForm
from django.contrib.auth import login
from django.contrib.auth.decorators import login_required
from django.http import HttpResponseForbidden
from .models import Product, Category
from django.contrib.auth.decorators import login_required
from .forms import CustomUserCreationForm



# Головна сторінка зі списком товарів + пошук
def product_list(request):
    query = request.GET.get('q')
    category_id = request.GET.get('category')

    products = Product.objects.all()
    categories = Category.objects.all()

    if query:
        products = products.filter(name__icontains=query)
    
    if category_id and category_id.isdigit():
        products = products.filter(category__id=category_id)

    context = {
        'products': products,
        'categories': categories,
        'query': query,
        'selected_category': int(category_id) if category_id and category_id.isdigit() else None
    }

    return render(request, 'products/product_list.html', context)
  

# Детальна інформація про товар
def product_detail(request, pk):
    product = get_object_or_404(Product, pk=pk)
    return render(request, 'products/product_detail.html', {'product': product})

# Створення товару (лише для авторизованих користувачів)
@login_required
def product_create(request):
    if request.method == 'POST':
        form = ProductForm(request.POST, request.FILES)
        if form.is_valid():
            product = form.save(commit=False)
            product.author = request.user  # Прив'язуємо автора до товару
            product.save()
            return redirect('product_list')
    else:
        form = ProductForm()
    return render(request, 'products/product_form.html', {'form': form})

# Редагування товару
@login_required
def product_update(request, pk):
    product = get_object_or_404(Product, pk=pk)
    if request.user != product.author:
        return HttpResponseForbidden("⛔ Ви не маєте доступу до редагування цього товару.")
    
    if request.method == 'POST':
        form = ProductForm(request.POST, request.FILES, instance=product)
        if form.is_valid():
            form.save()
            return redirect('product_list')
    else:
        form = ProductForm(instance=product)
    return render(request, 'products/product_form.html', {'form': form})
@login_required
def product_delete(request, pk):
    product = get_object_or_404(Product, pk=pk)
    if request.user != product.author:
        return HttpResponseForbidden("⛔ Ви не маєте доступу до видалення цього товару.")
    
    if request.method == 'POST':
        product.delete()
        return redirect('product_list')
    return render(request, 'products/product_confirm_delete.html', {'product': product})

# Реєстрація користувача
def register(request):
    if request.method == 'POST':
        form = CustomUserCreationForm(request.POST)
        if form.is_valid():
            user = form.save()
            login(request, user)
            return redirect('product_list')
    else:
        form = CustomUserCreationForm()
    return render(request, 'registration/register.html', {'form': form})@login_required
def profile(request):
    user = request.user
    products = Product.objects.filter(author=user)
    return render(request, 'products/profile.html', {'user': user, 'products': products})








